koch := fn(a, b, limit) {
    dx := b[0] - a[0]
    dy := b[1] - a[1]
    dist := hypot(dx, dy)
    unit := dist/3
    angle := atan2(dy, dx)

    x1 := a[0] + dx / 3
    y1 := a[1] + dy / 3
    p1 := [x1, y1]

    x2 := x1 + cos(angle - PI / 3) * unit
    y2 := y1 + sin(angle - PI / 3) * unit
    p2 := [x2, y2]
    
    x3 := b[0] - dx / 3
    y3 := b[1] - dy / 3
    p3 := [x3, y3]
    
    if limit > 0 {
        koch(a, p1, limit - 1)
        koch(p1, p2, limit - 1)
        koch(p2, p3, limit - 1)
        koch(p3, b, limit - 1)
    } else {
        push()
        //moveTo(a[0], a[1])
        lineTo(x1, y1)
        lineTo(x2, y2)
        lineTo(x3, y3)
        lineTo(b[0], b[1])
        pop()
    }
}

size(256)
clear()

viewport(-WIDTH/2, WIDTH/2, -HEIGHT/2, HEIGHT/2)

// Shape size
side := 0.5*min(WIDTH, HEIGHT)

// Shape Vertices
pA := [-side/2, -side/2]
pB := [side/2, -side/2]
pC := [0, side/2]

// How many recursions?
deep := 3

koch(pA, pB, deep)
koch(pB, pC, deep)
koch(pC, pA, deep)


fillColor("#00ff00CC")
strokeColor("#000000")
strokeWeight(2)
fillAndStroke()

// Save the output
snapshot("snowflake.png")