pointInCircle := fn(radius) {
    r := radius * sqrt(randf())
    theta := randf() * 2 * PI
    x := r * cos(theta)
    y := r * sin(theta)

    return [x, y]
}

// Creates an image that is 480 x 120 pixels
size(256)
// Clear the image

clear()

viewport(-105, 105, -105, 105)

// Do iterations
i := 0
while(i < 200) {
    // circle radius
    r := randf(5, 50)
    
    // circle center
    c := pointInCircle(r)

    // draws the circle
    circle(c[0], c[1], r)

    // generate a random integer...
    // if it is even 
    if randi() % 2 == 0 {
        // fill the circle with a black color and a random transparency
        fillColor(randi(255), randi(255), randi(255), randi(50, 150))
        fill()
    } else {
        //...if it's odd, outline the circle
        strokeColor(randi(0, 20), randi(0, 20), randi(0, 20), randi(50, 150))
        // Sets the pen size 
        strokeWeight(randf(1, 6))
        stroke()
    }
    // increment the counter
    i = i + 1
}

// save the image
snapshot("circles.png")
